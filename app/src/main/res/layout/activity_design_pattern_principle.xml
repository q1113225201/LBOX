<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/activity_design_pattern_principle"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context="com.sjl.lbox.app.DesignPattern.DesignPatternPrincipleActivity">

    <TextView
        style="@style/TextViewCommonStyle"
        android:text="设计模式的六大原则" />
    <TextView
        style="@style/TextViewCommonStyle"
        android:text="单一职责原则" />
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="应该有且仅有一个原因引起类的变更。"/>
    <TextView
        style="@style/TextViewCommonStyle"
        android:text="里氏替换原则" />
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="所有引用基类的地方必须能透明地使用其子类的对象。"/>
    <TextView
        style="@style/TextViewCommonStyle"
        android:text="开闭原则" />
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="一个软件实体如类、模块和函数应该对扩展开放，对修改关闭。"/>
    <TextView
        style="@style/TextViewCommonStyle"
        android:text="依赖倒置原则" />
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="1、层模块不应该依赖底层模块，两者都应该依赖其抽象；\n2、抽象不应该依赖细节；\n3、细节应该依赖抽象；"/>
    <TextView
        style="@style/TextViewCommonStyle"
        android:text="接口隔离原则" />
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="类间的依赖关系应该建立在最小的接口上。"/>
    <TextView
        style="@style/TextViewCommonStyle"
        android:text="迪米特法则" />
    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="也可以说最少知道原则。一个对象应该对其他对象有最少的了解。"/>
</LinearLayout>
